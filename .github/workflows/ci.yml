name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug environment
        run: |
          echo "=== Debug: Runner PWD ==="
          pwd
          echo "\n=== Debug: Root ls ==="
          ls -la
          echo "\n=== Debug: backend ls ==="
          ls -la backend || true
          echo "\n=== Debug: node/npm versions ==="
          node --version || true
          npm --version || true
          echo "\n=== Debug: head of backend/package.json ==="
          sed -n '1,200p' backend/package.json || true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Debug runner environment
        run: |
          echo "--- GITHUB_WORKSPACE ---"
          echo "$GITHUB_WORKSPACE"
          echo "--- PWD ---"
          pwd
          echo "--- list root ---"
          ls -la
          echo "--- list backend ---"
          ls -la backend || true
          echo "--- node/npm versions ---"
          node --version || true
          npm --version || true
          echo "--- backend/package.json ---"
          if [ -f backend/package.json ]; then
            sed -n '1,200p' backend/package.json
          else
            echo "backend/package.json not found"
          fi

      - name: Install backend dependencies
        working-directory: backend
        # Prefer clean install with lockfile, but fall back to regular install if lockfile is missing
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      - name: Run backend tests
        working-directory: backend
        env:
          USE_OPENAI: false
          HUGGINGFACE_API_KEY: dummy
        run: npm test --silent

      - name: Lint backend code
        working-directory: backend
        run: npm run lint

      - name: Check formatting
        working-directory: backend
        run: npm run format:check

  e2e:
    name: End-to-end tests
    runs-on: ubuntu-latest
    needs: backend-tests
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Wait for Redis
        run: |
          for i in $(seq 1 30); do
            if nc -z localhost 6379 >/dev/null 2>&1; then
              echo "redis ready"; exit 0
            fi
            sleep 1
          done
          echo "redis not ready"; exit 1

      - name: Start backend in background
        working-directory: backend
        run: |
          REDIS_URL=redis://localhost:6379/0 NODE_ENV=production npm run start &
          echo $! > /tmp/backend.pid

      - name: Wait for backend ready
        run: |
          for i in $(seq 1 30); do
            if curl -sSf http://localhost:3000/ready >/dev/null 2>&1; then
              echo "backend ready"; exit 0
            fi
            sleep 1
          done
          echo "backend not ready"; exit 1

      - name: Run tests against stack
        working-directory: backend
        env:
          USE_OPENAI: false
          HUGGINGFACE_API_KEY: dummy
        run: npm test --silent

      - name: Tear down backend
        if: always()
        run: |
          if [ -f /tmp/backend.pid ]; then
            kill $(cat /tmp/backend.pid) || true
            rm /tmp/backend.pid || true
          fi